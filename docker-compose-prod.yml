version: '3.9'

services:
  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - access_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:19.0.3
    restart: always
    ports:
      - "8443:8443"
    volumes:
      - ./theme:/opt/keycloak/themes/access/login
      - ./nginx:/etc/nginx
    command: start --auto-build
    depends_on:
      - postgres
    environment:
      KC_HTTP_ENABLED: 'true'
      KC_HOSTNAME_STRICT: 'false'
      KC_HOSTNAME_STRICT_HTTPS: 'false'
      KC_HTTPS_CERTIFICATE_FILE: /etc/nginx/fullchain.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /etc/nginx/privkey.pem
      KC_PROXY: passthrough
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
  sandbox:
    container_name: sandbox
    image: docker:dind
    privileged: true
    ports:
      - "2375:2375"
    volumes:
      - ./access:/var/lib/docker/access
    environment:
      APP_URL: info1-staging.ifi.uzh.ch
      DOCKER_TLS_CERTDIR:
  backend:
    container_name: backend
    image: sealuzh/access-backend:re
    restart: always
    privileged: true
    ports:
      - "8081:8081"
    depends_on:
      - keycloak
      - sandbox
    volumes:
      - ./access:/var/lib/docker/access
    environment:
      DATABASE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
      AUTH_SERVER_URL: ${APP_URL}:8443
      ACCESS_WORKING_DIR: /var/lib/docker/access
      DOCKER_HOST: tcp://sandbox:2375
  frontend:
    container_name: frontend
    image: sealuzh/access-frontend:re
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/fullchain.pem:/etc/nginx/fullchain.pem
      - ./nginx/privkey.pem:/etc/nginx/privkey.pem
    depends_on:
      - backend

volumes:
  access_data:
