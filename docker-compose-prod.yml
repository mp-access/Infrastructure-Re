version: '3.9'

services:
  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - courses:/var/lib/postgresql/data
    environment:
      TZ: "Europe/Zurich"
      POSTGRES_DB: access
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:20.0.3
    restart: always
    privileged: true
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      - postgres
    volumes:
      - ./access/theme:/opt/keycloak/themes/access/login
      - ./access/realm.json:/opt/keycloak/data/import/realm.json
      - ./access/letsencrypt/live/${DOMAIN}/fullchain.pem:/certs/fullchain.pem
      - ./access/letsencrypt/live/${DOMAIN}/privkey.pem:/certs/privkey.pem
    command: start --import-realm
    environment:
      KC_FEATURES: preview,docker
      KC_PROXY: edge
      KC_DB: postgres
      KC_DB_URL: ${POSTGRES_URL}
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HTTPS_CERTIFICATE_FILE: /certs/fullchain.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /certs/privkey.pem
      KC_HOSTNAME_STRICT: 'false'
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      CLIENT_SECRET: ${CLIENT_SECRET}
      PROXY_ADDRESS_FORWARDING: 'true'
  docker:
    container_name: docker
    image: docker:dind
    privileged: true
    ports:
      - "2376:2376"
    volumes:
      - ./access/workspace:/workspace/data
      - ./access/tls/ca:/tls/ca
      - ./access/tls/client:/tls/client
    environment:
      DOCKER_TLS_CERTDIR: /tls
  backend:
    container_name: backend
    image: sealuzh/access-backend:x
    restart: always
    privileged: true
    ports:
      - "8081:8081"
    depends_on:
      - keycloak
      - docker
    volumes:
      - ./access/workspace:/workspace/data
      - ./access/tls/client:/tls/client:ro
    environment:
      TZ: "Europe/Zurich"
      POSTGRES_URL: ${POSTGRES_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      AUTH_SERVER_URL: ${AUTH_SERVER_URL}
      DOCKER_HOST: tcp://docker:2376
      DOCKER_TLS_VERIFY: 'true'
      DOCKER_CERT_PATH: /tls/client
      WORKING_DIR: /workspace/data
  frontend:
    container_name: frontend
    image: sealuzh/access-frontend:x
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./access/certbot:/var/www/certbot
      - ./access/letsencrypt:/etc/letsencrypt
      - ./access/nginx.conf:/etc/nginx/conf.d/nginx.conf
    environment:
      DOMAIN: ${DOMAIN}
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./access/certbot:/var/www/certbot
      - ./access/letsencrypt:/etc/letsencrypt
    command: >-
             certonly --webroot -w /var/www/certbot
             --email ${KEYCLOAK_ADMIN} -d ${DOMAIN} --agree-tos

volumes:
  courses:
