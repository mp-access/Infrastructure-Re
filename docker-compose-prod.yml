version: '3.9'

services:
  postgres:
    container_name: postgres
    image: postgres:alpine
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - access_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: access
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:20.0.0
    restart: always
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - ./theme:/opt/keycloak/themes/access/login
      - ./nginx:/etc/nginx
    command: start --auto-build
    depends_on:
      - postgres
    environment:
      KC_HOSTNAME_STRICT: 'false'
      KC_HTTPS_CERTIFICATE_FILE: /certs/fullchain.pem
      KC_HTTPS_CERTIFICATE_KEY_FILE: /certs/privkey.pem
      KC_PROXY: edge
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/access
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
  docker:
    container_name: docker
    image: docker:dind
    privileged: true
    ports:
      - "2376:2376"
    volumes:
      - ./access:/usr/access
      - ./certs/ca:/certs/ca
      - ./certs/client:/certs/client
    environment:
      DOCKER_TLS_CERTDIR: /certs
  backend:
    container_name: backend
    image: sealuzh/access-backend:re
    restart: always
    privileged: true
    ports:
      - "8081:8081"
    depends_on:
      - keycloak
      - docker
    volumes:
      - ./access:/usr/access
      - ./certs/client:/certs/client:ro
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      CLIENT_SECRET: ${CLIENT_SECRET}
      AUTH_SERVER_URL: ${AUTH_SERVER_URL}
      DOCKER_HOST: tcp://docker:2376
      DOCKER_TLS_VERIFY: 'true'
      DOCKER_CERT_PATH: /certs/client
  frontend:
    container_name: frontend
    image: sealuzh/access-frontend:re
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - ./certs:/certs:ro
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    environment:
      REACT_APP_AUTH_SERVER_URL: ${AUTH_SERVER_URL}

volumes:
  access_data:
